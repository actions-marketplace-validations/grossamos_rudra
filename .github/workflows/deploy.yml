name: deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    steps:
      - name: Checkout code 
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: check for modified files
        id: check_files
        run: |
          git diff --name-only HEAD^ HEAD > files
          is_modified=false
          while read line; do  
            echo $line
            if [[ $line == website/* ]]; then
              is_modified=true
            fi
          done < files
          if [[ is_modified ]]; then
            echo "::set-output name=run_job::true"
          else
            echo "::set-output name=run_job::false"
          fi
  publish:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.run_job == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/server.key
          chmod 600 ~/.ssh/server.key
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/server.key
            StrictHostKeyChecking no 
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Build Docker Image
        run: |
          cd website
          docker build -t rudra-website:latest .
      - name: Export Docker Image
        run: docker save -o rudra-website.latest.tar rudra-website
      - name: Deploy Docker Image
        run: |
          scp ./rudra-website.latest.tar server:~/download/
          ssh server "docker load < ~/download/rudra-website.latest.tar; docker kill rudra-website; docker run --rm --name rudra-website -d -p 9077:80 rudra-website:latest"
