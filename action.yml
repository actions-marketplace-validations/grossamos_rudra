name: 'Rudra for OpenAPI test coverage'
author: 'Amos Gross'
description: 'Openapi based test coverage for integration tests'
branding:
  icon: 'wind'
  color: 'purple'
inputs:
  stage:
    description: 'Preperation or evaluation mode'
    required: true
    default: 'evaluation'
  openapi-source: 
    description: 'Path or URL of openapi file (either json or yaml)'
    required: false
  instance-url: 
    description: 'URL of application that will be tested'
    required: false
  account-for-security: 
    description: 'Take security tags of spec into account and require all 401/403 cases to be tested'
    required: false
  debug:
    description: 'Debugging mode'
    required: false
  test-coverage:
    description: 'Percentage of endpoints that should be covered to pass this stage'
    required: false
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        if [[ "${{inputs.stage}}" = "preperation" ]]; then 
            if [[ "${{inputs.openapi-source}}" = "" || "${{inputs.instance-url}}" = "" ]]; then 
                echo "please provide both openapi-path and instance-url as inputs" 
                exit 1 
            fi 
            docker network create rudra 
            for line in $(docker ps -q); do 
                docker network connect rudra $line; 
            done 
            RUDRA_APP_BASE_URL=${{inputs.instance-url}}
            if  [[ -f "${{inputs.openapi-source}}" ]]; then
                SPEC_VOLUME="--volume $PWD/${{inputs.openapi-source}}:/$(basename ${{inputs.openapi-source}})"
                RUDRA_OPENAPI_SOURCE="/$(basename ${{inputs.openapi-source}})"
            else
                SPEC_VOLUME=""
                RUDRA_OPENAPI_SOURCE="${{inputs.openapi-source}}"
            fi
            docker run --env RUDRA_DEBUG="${{inputs.debug}}" --env RUDRA_APP_BASE_URL="${RUDRA_APP_BASE_URL/localhost/172.17.0.1}" --env RUDRA_OPENAPI_SOURCE="$RUDRA_OPENAPI_SOURCE" --env RUDRA_ACCOUNT_FOR_SECURITY="${{inputs.account-for-security}}" --env RUDRA_TEST_COVERAGE="${{inputs.test-coverage}}" $SPEC_VOLUME -p 13750:13750 --network rudra --name rudra -d grossamos/rudra:v0.0.6
            sleep 1
            docker logs rudra
            exit $(docker container inspect --format '{{.State.ExitCode}}' rudra) 
        elif [[ "${{inputs.stage}}" = "evaluation" ]]; then 
            if [[ "${{inputs.openapi-path}}" != "" || "${{inputs.instance-url}}" != "" || "${{inputs.test-coverage}}" != "" || "${{inputs.debug}}" != "" || "${{inputs.account-for-security}}" != "" ]]; then 
                echo "please configure rudra in the preperation stage and do not add configuration parameters (outside of stage) here" 
                exit 1 
            fi 
            docker exec rudra nginx -s stop 
            sleep 1
            docker logs rudra
            exit $(docker container inspect --format '{{.State.ExitCode}}' rudra) 
        else 
            echo "please provide a stage name of either \"preperation\" or \"evaluation\"" 
            exit 1 
        fi 

